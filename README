### Download Source ###

To retrieve the code:

    hg clone https://subversive.cims.nyu.edu/geonum/zhou/PyMesh/

Be sure to save the root directory of PyMesh in the environment variable
PYMESH_PATH:

    export PYMESH_PATH=/path/to/PyMesh/

Unit tests relies on this environment variable to load relevant libraries.

### Dependencies ###

PyMesh depends on the following tools/libraries:

* [Python](https://www.python.org/) v2.7 or higher, note that Python 3.x is not tested.
* [NumPy](http://www.numpy.org/) v1.8 or higher
* [SciPy](http://www.scipy.org/) v0.13 or higher
* [SWIG](http://www.swig.org/)
* [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page)

Optional library:

* [SparseHash](https://code.google.com/p/sparsehash/)
* [CGAL](https://www.cgal.org/)
* [TetGen](http://wias-berlin.de/software/tetgen/)
* [libigl](http://igl.ethz.ch/projects/libigl/)
* [cork](https://github.com/gilbo/cork)

Most optinal libraries are detected automatically.  To disable the usage of SparseHash, use the flag "-DUSE_SPARSE_HASH=OFF" with cmake.  I.e.

    cmake -DUSE_SPARSE_HASH=OFF ..

instead of

    cmake ..

### Environment Variables ###

If any of the dependent library is not installed in standard locations (/usr/local/, /opt/local), one needs to sent environment variables that points to the correct directories.  PyMesh check the following environment varaibles:

* EIGEN_INC: directory containing the Eigen library.
* GOOGLEHASH_INCLUDES: directory containing sparse hash.
* CGAL_PATH: path to CGAL library
* BOOST_INC: directory containing boost.
* LIBIGL_PATH: path to libigl.
* CORK_PATH: path to cork.

### Build ###

It is recommended to build out of source:

    cd $PYMESH_PATH
    mkdir build
    cd build
    cmake ..

To build the main PyMesh library:

    make
    make src_tests

To build all available tools:

    make tools
    make tools_tests

Make sure all unit tests are passed before using the library.

