# Include this directory
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

# Source files
FILE(GLOB SRC_FILES *.cpp)
FILE(GLOB INC_FILES *.h)

SET(DEPENDENT_LIBS "")

SET(CGAL_FLAGS "-frounding-math")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CGAL_FLAGS}")

# Inlclude CGAL
IF (DEFINED ENV{CGAL_PATH})
    SET(CGAL_DIR $ENV{CGAL_PATH})
ENDIF (DEFINED ENV{CGAL_PATH})
FIND_PACKAGE(CGAL)
IF(CGAL_FOUND)
    INCLUDE(${CGAL_USE_FILE})
    ADD_DEFINITIONS(-DWITH_CGAL)
    LIST(APPEND DEPENDENT_LIBS ${CGAL_LIBRARIES})
    ADD_SUBDIRECTORY(CGAL)
ENDIF(CGAL_FOUND)

# Include Qhull
IF (DEFINED ENV{QHULL_PATH})
    SET(QHULL_ROOT $ENV{QHULL_PATH})
ENDIF (DEFINED ENV{QHULL_PATH})
FIND_PACKAGE(Qhull)
IF (QHULL_FOUND)
    INCLUDE_DIRECTORIES(${QHULL_INCLUDE_DIRS}/libqhull/)
    ADD_DEFINITIONS(-DWITH_QHULL)
    LIST(APPEND DEPENDENT_LIBS ${QHULL_LIBRARIES})
    ADD_SUBDIRECTORY(Qhull)
ENDIF (QHULL_FOUND)


ADD_LIBRARY(lib_convex_hull SHARED ${SRC_FILES} ${INC_FILES})
TARGET_LINK_LIBRARIES(lib_convex_hull
    ${DEPENDENT_LIBS} Mesh lib_MeshUtils)
SET_TARGET_PROPERTIES(lib_convex_hull PROPERTIES OUTPUT_NAME "convex_hull")

SET(SWG_FILES PyConvexHull.i)

# Generate wrapper for python
SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CMAKE_SWIG_FLAGS "-includeall")
SWIG_ADD_MODULE(PyConvexHull python ${SWG_FILES} ${INC_FILES})
SWIG_LINK_LIBRARIES(PyConvexHull ${PYTHON_LIBRARIES} lib_convex_hull)

# Boudle exe, lib, swig wrapper into a single target.
# To build all: "make convex_hull"
ADD_CUSTOM_TARGET(convex_hull DEPENDS lib_convex_hull _PyConvexHull)
