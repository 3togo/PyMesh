SET(CGAL_FLAGS "-frounding-math")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CGAL_FLAGS}")

# General lib locations
LINK_DIRECTORIES(/opt/local/lib)

# Inlclude CGAL
IF (DEFINED ENV{CGAL_PATH})
    INCLUDE_DIRECTORIES($ENV{CGAL_PATH}/include)
    LINK_DIRECTORIES($ENV{CGAL_PATH}/lib)
ELSE (DEFINED ENV{CGAL_PATH})
    FIND_PACKAGE(CGAL REQUIRED)
    INCLUDE_DIRECTORIES(${CGAL_INCLUDE_DIRS})
ENDIF (DEFINED ENV{CGAL_PATH})

# Include boost
IF (DEFINED ENV{BOOST_INC})
    INCLUDE_DIRECTORIES($ENV{BOOST_INC})
    LINK_DIRECTORIES($ENV{BOOST_LIB})
ELSE (DEFINED ENV{BOOST_INC})
    FIND_PACKAGE(boost REQUIRED)
    INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIRS})
    SET(BOOST_LIBRARIES ${BOOST_LIBRARIES} boost_thread-mt)
ENDIF (DEFINED ENV{BOOST_INC})

# MPFR
IF (DEFINED ENV{MPFR_LIB})
    LINK_DIRECTORIES($ENV{MPFR_LIB})
ENDIF (DEFINED ENV{MPFR_LIB})

# Source files
FILE(GLOB SRC_FILES *.cpp)
FILE(GLOB INC_FILES *.h)

# Include this directory
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_LIBRARY(cgal_wrapper SHARED ${SRC_FILES} ${INC_FILES})
TARGET_LINK_LIBRARIES(cgal_wrapper
    ${CGAL_LIBRARIES} CGAL CGAL_Core
    ${BOOST_LIBRARIES}
    gmp mpfr)

SET(SWG_FILES PyCGAL.i)

# Generate wrapper for python
SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CMAKE_SWIG_FLAGS "-includeall")
SWIG_ADD_MODULE(PyCGAL python ${SWG_FILES} ${INC_FILES})
SWIG_LINK_LIBRARIES(PyCGAL ${PYTHON_LIBRARIES} cgal_wrapper)

# Boudle exe, lib, swig wrapper into a single target.
# To build all: "make cgal"
ADD_CUSTOM_TARGET(cgal DEPENDS cgal_wrapper _PyCGAL)
