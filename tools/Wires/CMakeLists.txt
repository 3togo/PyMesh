# General lib locations
LINK_DIRECTORIES(/opt/local/lib)

# libigl
FIND_PACKAGE(libigl REQUIRED)
INCLUDE_DIRECTORIES(${LIBIGL_INCLUDE_DIR})

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/tools)

FILE(GLOB SRC_FILES *.cpp)
FILE(GLOB INC_FILES *.h)

ADD_SUBDIRECTORY(Attributes)
ADD_SUBDIRECTORY(WireNetwork)
ADD_SUBDIRECTORY(Tiler)
ADD_SUBDIRECTORY(Misc)
ADD_SUBDIRECTORY(Inflator)
#ADD_SUBDIRECTORY(Parameter)

ADD_LIBRARY(lib_wires SHARED ${SRC_FILES} ${INC_FILES})
TARGET_LINK_LIBRARIES(lib_wires Mesh lib_MeshUtils lib_convex_hull
    lib_triangle_wrapper lib_csg)
SET_TARGET_PROPERTIES(lib_wires PROPERTIES OUTPUT_NAME "wires")

#set(SWG_FILES PyWires.i)
#
## Generate wrapper for python
#SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CPLUSPLUS ON)
#SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CMAKE_SWIG_FLAGS "-includeall")
#SWIG_ADD_MODULE(PyWires python ${SWG_FILES} ${INC_FILES})
#SWIG_LINK_LIBRARIES(PyWires ${PYTHON_LIBRARIES} Mesh lib_wires)

# Boudle exe, lib, swig wrapper into a single target.
# To build all 3, one can just "make assembler"
# Note the swig target is the autogenerated _PyAssembler
# instead of PyAssembler.
#ADD_CUSTOM_TARGET(wires DEPENDS lib_wires _PyWires)
ADD_CUSTOM_TARGET(wires DEPENDS lib_wires)
