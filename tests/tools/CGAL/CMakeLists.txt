# Include headers
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/tools/CGAL/)

# Inlclude CGAL
IF (DEFINED ENV{CGAL_PATH})
    INCLUDE_DIRECTORIES($ENV{CGAL_PATH}/include)
    LINK_DIRECTORIES($ENV{CGAL_PATH}/lib)
ELSE (DEFINED ENV{CGAL_PATH})
    FIND_PACKAGE(CGAL REQUIRED)
    INCLUDE_DIRECTORIES(${CGAL_INCLUDE_DIRS})
ENDIF (DEFINED ENV{CGAL_PATH})

# Include boost
IF (DEFINED ENV{BOOST_INC})
    INCLUDE_DIRECTORIES($ENV{BOOST_INC})
    LINK_DIRECTORIES($ENV{BOOST_LIB})
ELSE (DEFINED ENV{BOOST_INC})
    FIND_PACKAGE(boost REQUIRED)
    INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIRS})
    SET(BOOST_LIBRARIES ${BOOST_LIBRARIES} boost_thread-mt)
ENDIF (DEFINED ENV{BOOST_INC})

# Enumerate source files
FILE(GLOB TEST_SRC_FILES unit_test_driver.cpp)
FILE(GLOB TEST_INC_FILES *_test.h)

ADD_EXECUTABLE(cgal_tests ${TEST_SRC_FILES} ${TEST_INC_FILES})
TARGET_LINK_LIBRARIES(cgal_tests Mesh cgal_wrapper ${GTEST_BOTH_LIBRARIES})
ADD_CUSTOM_COMMAND(TARGET cgal_tests POST_BUILD COMMAND cgal_tests)
