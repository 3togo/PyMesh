# Include Eigen
IF (DEFINED ENV{EIGEN_INC})
    SET(EIGEN_BASE $ENV{EIGEN_INC}/eigen3)
ELSE (DEFINED ENV{EIGEN_INC})
    SET(EIGEN_BASE "/opt/local/include/eigen3")
ENDIF (DEFINED ENV{EIGEN_INC})
INCLUDE_DIRECTORIES("/opt/local/include")
INCLUDE_DIRECTORIES(${EIGEN_BASE})
INCLUDE_DIRECTORIES(${EIGEN_BASE}/Eigen)
INCLUDE_DIRECTORIES(${EIGEN_BASE}/unsupported)
ADD_DEFINITIONS(-DEIGEN_YES_I_KNOW_SPARSE_MODULE_IS_NOT_STABLE_YET)

# Find OpenCL
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99")
IF (DEFINED ENV{OPENCL_ROOT})
    INCLUDE_DIRECTORIES($ENV{OPENCL_INC})
    LINK_DIRECTORIES($ENV{OPENCL_LIB})
    SET(OPENCL_LIBRARIES OpenCL)
ELSE (DEFINED ENV{OPENCL_ROOT})
    FIND_PACKAGE(OpenCL REQUIRED)
    IF (OPENCL_FOUND)
        INCLUDE_DIRECTORIES(${OPENCL_INCLUDE_DIRS})
    ELSE(OPENCL_FOUND)
        MESSAGE("OpenCL not found")
    ENDIF()
ENDIF(DEFINED ENV{OPENCL_ROOT})

# Add googletest googlemock support
ADD_SUBDIRECTORY(external/gmock-1.7.0)
SET(GTEST_BOTH_LIBRARIES gtest gmock)
INCLUDE_DIRECTORIES(${gmock_SOURCE_DIR})
INCLUDE_DIRECTORIES(${gmock_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${gtest_SOURCE_DIR})
INCLUDE_DIRECTORIES(${gtest_SOURCE_DIR}/include)

# Add eigen wrapper
INCLUDE_DIRECTORIES(${EIGEN_WRAPPER_PATH})

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tools)
ADD_SUBDIRECTORY(learning_tests)

# Bundle all tests into a single target
# make all_tests
ADD_CUSTOM_TARGET(all_tests DEPENDS tests tools_tests learning_tests)

